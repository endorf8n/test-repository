{"mappings":"IA4BAA,EAAe,C,KA5BF,CAACC,EAAKC,KACjB,IACE,MAAMC,EAAkBC,KAAKC,UAAUH,GAEvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,QAIhCT,IACX,IACE,MAAME,EAAkBG,aAAaK,QAAQV,GAE7C,OAA2B,OAApBE,OAA2BS,EAAYR,KAAKS,MAAMV,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,UAI9BT,IACb,IACEK,aAAaQ,WAAWb,E,CACxB,MAAOO,GACPC,QAAQM,IAAI,sBAAuBP,EAAME,Q,ICtB7C,MAAMM,EAAgBC,SAASC,cAAc,kBACvCC,EAAW,GAEa,MAC5B,MAAMC,EAAiBpB,EAAgBqB,KAAK,mBAE5C,QAAuBT,IAAnBQ,EAAJ,CAIAX,QAAQM,IAAIK,GAEZ,IAAK,MAAMnB,KAAOmB,EAChBJ,EAAcM,SAASrB,GAAKC,MAAQkB,EAAenB,EANnD,CAMuD,EAI3DsB,GAqBAP,EAAcQ,iBAAiB,UAnBGC,IAChC,MAAMC,EAAqBD,EAAME,OAC3BC,EAAoBF,EAAmBxB,MACvC2B,EAAmBH,EAAmBI,KAE5CX,EAASU,GAAoBD,EAE7B5B,EAAgB+B,KAAK,kBAAmBZ,EAAS,IAanDH,EAAcQ,iBAAiB,UAVDC,IAC5BA,EAAMO,iBAEgBP,EAAME,OAEdM,QACdjC,EAAgBkC,OAAO,kBAAkB","sources":["src/js/localstorage.js","src/js/03-feedback.js"],"sourcesContent":["const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.log('Remove item error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};\n","import localStorageAPI from './localstorage';\n\nconst contactFormEl = document.querySelector('.feedback-form');\nconst userInfo = {};\n\nconst fillContactFormFields = () => {\n  const userInfoFromLS = localStorageAPI.load('contactFormData');\n\n  if (userInfoFromLS === undefined) {\n    return;\n  }\n\n  console.log(userInfoFromLS);\n\n  for (const key in userInfoFromLS) {\n    contactFormEl.elements[key].value = userInfoFromLS[key];\n  }\n};\n\nfillContactFormFields();\n\nconst onContactFormFielElChange = event => {\n  const contactFormFieldEl = event.target;\n  const contactFieldValue = contactFormFieldEl.value;\n  const contactFieldName = contactFormFieldEl.name;\n\n  userInfo[contactFieldName] = contactFieldValue;\n\n  localStorageAPI.save('contactFormData', userInfo);\n};\n\nconst onContactFormElSubmit = event => {\n  event.preventDefault();\n\n  const contactFormEl = event.target;\n\n  contactFormEl.reset();\n  localStorageAPI.remove('contactFormData');\n};\n\ncontactFormEl.addEventListener('change', onContactFormFielElChange);\ncontactFormEl.addEventListener('submit', onContactFormElSubmit);\n"],"names":["$89a4baeedb6cdec9$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","log","$945622fd0f572e60$var$contactFormEl","document","querySelector","$945622fd0f572e60$var$userInfo","userInfoFromLS","load","elements","$945622fd0f572e60$var$fillContactFormFields","addEventListener","event","contactFormFieldEl","target","contactFieldValue","contactFieldName","name","save","preventDefault","reset","remove"],"version":3,"file":"03-feedback.138f1a02.js.map"}